{
  "$id": "https://raw.githubusercontent.com/qwacko/pocketforge/refs/heads/main/collections/schema/collections_schema_fields.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Collections Configuration",
  "type": "object",
  "oneOf": [
    {
      "properties": {
        "type": {
          "title": "Field Type",
          "type": "string",
          "description": "The Field Type. Must be one of the following : text, json, autodate, file, email, url, date, editor, select, password, relation, number",
          "enum": ["text"]
        },
        "id": {
          "$ref": "#/definitions/fieldId"
        },
        "name": {
          "$ref": "#/definitions/fieldName"
        },
        "required": {
          "$ref": "#/definitions/required"
        },
        "hidden": {
          "$ref": "#/definitions/hidden"
        },
        "presentable": {
          "$ref": "#/definitions/presentable"
        },
        "min": {
          "$ref": "#/definitions/min"
        },
        "max": {
          "$ref": "#/definitions/max"
        },
        "pattern": {
          "$ref": "#/definitions/pattern"
        },
        "autogenerate_pattern": {
          "$ref": "#/definitions/autogenerate_pattern"
        }
      },
      "required": ["type", "id", "name"],
      "additionalProperties": false
    },
    {
      "properties": {
        "type": {
          "title": "Field Type",
          "type": "string",
          "description": "The Field Type. Must be one of the following : text, json, autodate, file, email, url, date, editor, select, password, relation, number",
          "enum": ["json"]
        },
        "id": {
          "$ref": "#/definitions/fieldId"
        },
        "name": {
          "$ref": "#/definitions/fieldName"
        },
        "required": {
          "$ref": "#/definitions/required"
        },
        "hidden": {
          "$ref": "#/definitions/hidden"
        },
        "presentable": {
          "$ref": "#/definitions/presentable"
        },
        "max_size": {
          "$ref": "#/definitions/max_size"
        }
      },
      "required": ["type", "id", "name"],
      "additionalProperties": false
    },
    {
      "properties": {
        "type": {
          "title": "Field Type",
          "type": "string",
          "description": "The Field Type. Must be one of the following : text, json, autodate, file, email, url, date, editor, select, password, relation, number",
          "enum": ["autodate"]
        },
        "id": {
          "$ref": "#/definitions/fieldId"
        },
        "name": {
          "$ref": "#/definitions/fieldName"
        },
        "hidden": {
          "$ref": "#/definitions/hidden"
        },
        "presentable": {
          "$ref": "#/definitions/presentable"
        },
        "on_create": {
          "$ref": "#/definitions/on_create"
        },
        "on_update": {
          "$ref": "#/definitions/on_update"
        }
      },
      "required": ["type", "id", "name"],
      "additionalProperties": false
    },
    {
      "properties": {
        "type": {
          "title": "Field Type",
          "type": "string",
          "description": "The Field Type. Must be one of the following : text, json, autodate, file, email, url, date, editor, select, password, relation, number",
          "enum": ["file"]
        },
        "id": {
          "$ref": "#/definitions/fieldId"
        },
        "name": {
          "$ref": "#/definitions/fieldName"
        },
        "required": {
          "$ref": "#/definitions/required"
        },
        "hidden": {
          "$ref": "#/definitions/hidden"
        },
        "presentable": {
          "$ref": "#/definitions/presentable"
        },
        "max_size": {
          "$ref": "#/definitions/max_size"
        },
        "max_select": {
          "$ref": "#/definitions/max_select"
        },
        "mime_types": {
          "$ref": "#/definitions/mime_types"
        },
        "thumbs": {
          "$ref": "#/definitions/thumbs"
        },
        "protected": {
          "$ref": "#/definitions/protected"
        }
      },
      "required": ["type", "id", "name"],
      "additionalProperties": false
    },
    {
      "properties": {
        "type": {
          "title": "Field Type",
          "type": "string",
          "description": "The Field Type. Must be one of the following : text, json, autodate, file, email, url, date, editor, select, password, relation, number",
          "enum": ["email", "url"]
        },
        "id": {
          "$ref": "#/definitions/fieldId"
        },
        "name": {
          "$ref": "#/definitions/fieldName"
        },
        "required": {
          "$ref": "#/definitions/required"
        },
        "hidden": {
          "$ref": "#/definitions/hidden"
        },
        "presentable": {
          "$ref": "#/definitions/presentable"
        },
        "except_domains": {
          "$ref": "#/definitions/except_domains"
        },
        "only_domains": {
          "$ref": "#/definitions/only_domains"
        }
      },
      "required": ["type", "id", "name"],
      "additionalProperties": false
    },
    {
      "properties": {
        "type": {
          "title": "Field Type",
          "type": "string",
          "description": "The Field Type. Must be one of the following : text, json, autodate, file, email, url, date, editor, select, password, relation, number",
          "enum": ["date"]
        },
        "id": {
          "$ref": "#/definitions/fieldId"
        },
        "name": {
          "$ref": "#/definitions/fieldName"
        },
        "required": {
          "$ref": "#/definitions/required"
        },
        "hidden": {
          "$ref": "#/definitions/hidden"
        },
        "presentable": {
          "$ref": "#/definitions/presentable"
        },
        "min_date": {
          "$ref": "#/definitions/min_date"
        },
        "max_date": {
          "$ref": "#/definitions/max_date"
        }
      },
      "required": ["type", "id", "name"],
      "additionalProperties": false
    },
    {
      "properties": {
        "type": {
          "title": "Field Type",
          "type": "string",
          "description": "The Field Type. Must be one of the following : text, json, autodate, file, email, url, date, editor, select, password, relation, number",
          "enum": ["editor"]
        },
        "id": {
          "$ref": "#/definitions/fieldId"
        },
        "name": {
          "$ref": "#/definitions/fieldName"
        },
        "required": {
          "$ref": "#/definitions/required"
        },
        "hidden": {
          "$ref": "#/definitions/hidden"
        },
        "presentable": {
          "$ref": "#/definitions/presentable"
        },
        "max_size": {
          "$ref": "#/definitions/max_size"
        },
        "convert_urls": {
          "$ref": "#/definitions/convert_urls"
        }
      },
      "required": ["type", "id", "name"],
      "additionalProperties": false
    },
    {
      "properties": {
        "type": {
          "title": "Field Type",
          "type": "string",
          "description": "The Field Type. Must be one of the following : text, json, autodate, file, email, url, date, editor, select, password, relation, number",
          "enum": ["select"]
        },
        "id": {
          "$ref": "#/definitions/fieldId"
        },
        "name": {
          "$ref": "#/definitions/fieldName"
        },
        "required": {
          "$ref": "#/definitions/required"
        },
        "hidden": {
          "$ref": "#/definitions/hidden"
        },
        "presentable": {
          "$ref": "#/definitions/presentable"
        },
        "max_select": {
          "$ref": "#/definitions/max_select"
        },
        "values": {
          "$ref": "#/definitions/values"
        }
      },
      "required": ["type", "id", "name"],
      "additionalProperties": false
    },
    {
      "properties": {
        "type": {
          "title": "Field Type",
          "type": "string",
          "description": "The Field Type. Must be one of the following : text, json, autodate, file, email, url, date, editor, select, password, relation, number",
          "enum": ["password"]
        },
        "id": {
          "$ref": "#/definitions/fieldId"
        },
        "name": {
          "$ref": "#/definitions/fieldName"
        },
        "required": {
          "$ref": "#/definitions/required"
        },
        "hidden": {
          "$ref": "#/definitions/hidden"
        },
        "presentable": {
          "$ref": "#/definitions/presentable"
        },
        "cost": {
          "$ref": "#/definitions/cost"
        },
        "pattern": {
          "$ref": "#/definitions/pattern"
        },
        "min": {
          "$ref": "#/definitions/min"
        },
        "max": {
          "$ref": "#/definitions/max"
        }
      },
      "required": ["type", "id", "name"],
      "additionalProperties": false
    },
    {
      "properties": {
        "type": {
          "title": "Field Type",
          "type": "string",
          "description": "The Field Type. Must be one of the following : text, json, autodate, file, email, url, date, editor, select, password, relation, number",
          "enum": ["relation"]
        },
        "id": {
          "$ref": "#/definitions/fieldId"
        },
        "name": {
          "$ref": "#/definitions/fieldName"
        },
        "required": {
          "$ref": "#/definitions/required"
        },
        "hidden": {
          "$ref": "#/definitions/hidden"
        },
        "presentable": {
          "$ref": "#/definitions/presentable"
        },
        "collection_id": {
          "$ref": "#/definitions/collection_id"
        },
        "cascade_delete": {
          "$ref": "#/definitions/cascade_delete"
        },
        "max_select": {
          "$ref": "#/definitions/max_select"
        },
        "min_select": {
          "$ref": "#/definitions/min_select"
        }
      },
      "required": ["type", "id", "name"],
      "additionalProperties": false
    },

    {
      "properties": {
        "type": {
          "title": "Field Type",
          "type": "string",
          "description": "The Field Type. Must be one of the following : text, json, autodate, file, email, url, date, editor, select, password, relation, number",
          "enum": ["number"]
        },
        "id": {
          "$ref": "#/definitions/fieldId"
        },
        "name": {
          "$ref": "#/definitions/fieldName"
        },
        "required": {
          "$ref": "#/definitions/required"
        },
        "hidden": {
          "$ref": "#/definitions/hidden"
        },
        "presentable": {
          "$ref": "#/definitions/presentable"
        },
        "min_float": {
          "$ref": "#/definitions/min_float"
        },
        "max_float": {
          "$ref": "#/definitions/max_float"
        },
        "only_int": {
          "$ref": "#/definitions/only_int"
        }
      },
      "required": ["type", "id", "name"],
      "additionalProperties": false
    }
  ],
  "definitions": {
    "fieldId": {
      "type": "string",
      "description": "Id is the unique stable field identifier. Must be unique across all collections and fields.",
      "title": "ID",
      "pattern": "^[a-zA-Z0-9_]+$"
    },
    "fieldName": {
      "title": "Field Name",
      "type": "string",
      "description": "Name (required) is the unique name of the field.",
      "pattern": "^[a-z0-9_]+$"
    },
    "required": {
      "type": "boolean",
      "name": "required",
      "description": "If true, then the field is required",
      "default": false
    },
    "hidden": {
      "type": "boolean",
      "name": "hidden",
      "description": "Hidden hides the field from the API response.",
      "default": false
    },
    "presentable": {
      "type": "boolean",
      "description": "Presentable hints the Dashboard UI to use the underlying field record value in the relation preview label.",
      "default": false
    },
    "min": {
      "type": "number",
      "description": "Min specifies the minimum required string characters. If zero value, no min limit is applied."
    },
    "max": {
      "type": "number",
      "description": "Max specifies the maximum allowed string characters. If zero, a default limit is used."
    },
    "pattern": {
      "type": "string",
      "description": "Pattern specifies an optional regex pattern to match against the field value. Leave it empty to skip the pattern check."
    },
    "autogenerate_pattern": {
      "type": "string",
      "description": "autogenerate_pattern specifies an optional regex pattern that could be used to generate random string from it and set it automatically on record create if no explicit value is set or when the `:autogenerate` modifier is used."
    },
    "max_size": {
      "type": "number",
      "description": "max_size specifies the maximum allowed size in bytes. If zero, a default limit of 5MB is applied."
    },
    "on_create": {
      "type": "boolean",
      "description": "on_create auto sets the current datetime as field value on record create."
    },
    "on_update": {
      "type": "boolean",
      "description": "on_update auto sets the current datetime as field value on record update."
    },
    "max_select": {
      "type": "number",
      "description": "max_select specifies the maximum number of items that can be selected in a select field. If zero, a default limit of 1 is applied."
    },
    "min_select": {
      "type": "number",
      "description": "min_select specifies the minimum number of items that can be selected in a select field. If zero, a default limit of 1 is applied."
    },
    "mime_types": {
      "type": "array",
      "description": "mime_types specifies the allowed mime types for file upload. If empty, all mime types are allowed.",
      "items": {
        "type": "string"
      }
    },
    "thumbs": {
      "type": "array",
      "description": "Thumbs specifies an optional list of the supported thumbs for image based files. If empty, no thumbnails are generated. ",
      "items": {
        "type": "string",
        "pattern": "^[0-9]+x[0-9]+[tbf]?$"
      }
    },
    "protected": {
      "type": "boolean",
      "description": "Protected will require the users to provide a special file token to access the file.",
      "default": false
    },
    "except_domains": {
      "type": "array",
      "description": "except_domains will require the domain to NOT be included in the listed ones.This validator can be set only if only_domains is empty.",
      "items": {
        "type": "string"
      }
    },
    "only_domains": {
      "type": "array",
      "description": "only_domains will require the domain to be included in the listed ones. This validator can be set only if except_domains is empty.",
      "items": {
        "type": "string"
      }
    },
    "min_date": {
      "type": "string",
      "description": "min_date specifies the minimum allowed date and time. If empty, no min limit is applied.",
      "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
    },
    "max_date": {
      "type": "string",
      "description": "max_date specifies the maximum allowed date. If empty, no max limit is applied.",
      "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
    },
    "convert_urls": {
      "type": "boolean",
      "description": "convert_urls is usually used to instruct the editor whether to apply url conversion (eg. stripping the domain name in case the urls are using the same domain as the one where the editor is loaded).",
      "default": false
    },
    "values": {
      "type": "array",
      "description": "Values specifies the list of values that can be selected in a select field. If empty, no values are allowed.",
      "items": {
        "type": "string"
      }
    },
    "cost": {
      "type": "number",
      "description": "Cost specifies the cost/weight/iteration/etc. bcrypt factor. If zero, fallback to [bcrypt.DefaultCost]. If explicitly set, must be between [bcrypt.MinCost] and [bcrypt.MaxCost].",
      "default": 0
    },
    "collection_id": {
      "type": "string",
      "description": "collection_id is the id (Note the name) of the related collection.",
      "title": "Collection ID"
    },
    "cascade_delete": {
      "type": "boolean",
      "description": "cascade_delete indicates whether the root model should be deleted in case of delete of all linked relations.",
      "default": false
    },
    "min_float": {
      "type": "number",
      "description": "min_float specifies the min allowed field value. Leave it nil to skip the validator."
    },
    "max_float": {
      "type": "number",
      "description": "max_float specifies the max allowed field value. Leave it nil to skip the validator."
    },
    "only_int": {
      "type": "boolean",
      "description": "only_int specifies that the field should only accept integer values."
    }
  }
}
